from _typeshed import Incomplete
from distutils.command import build_ext
from numpy.distutils import log as log
from numpy.distutils.misc_util import appendpath as appendpath, fortran_ext_match as fortran_ext_match, get_cmd as get_cmd, is_sequence as is_sequence, is_string as is_string

def subst_vars(target, source, d) -> None: ...

class build_src(build_ext.build_ext):
    description: str
    user_options: Incomplete
    boolean_options: Incomplete
    help_options: Incomplete
    extensions: Incomplete
    package: Incomplete
    py_modules: Incomplete
    py_modules_dict: Incomplete
    build_src: Incomplete
    build_lib: Incomplete
    build_base: Incomplete
    force: Incomplete
    inplace: Incomplete
    package_dir: Incomplete
    f2pyflags: Incomplete
    f2py_opts: Incomplete
    swigflags: Incomplete
    swig_opts: Incomplete
    swig_cpp: Incomplete
    swig: Incomplete
    verbose_cfg: Incomplete
    def initialize_options(self) -> None: ...
    libraries: Incomplete
    data_files: Incomplete
    def finalize_options(self) -> None: ...
    def run(self) -> None: ...
    get_package_dir: Incomplete
    def build_sources(self) -> None: ...
    def build_data_files_sources(self) -> None: ...
    def build_npy_pkg_config(self) -> None: ...
    def build_py_modules_sources(self) -> None: ...
    def build_library_sources(self, lib_name, build_info) -> None: ...
    ext_target_dir: Incomplete
    def build_extension_sources(self, ext) -> None: ...
    def generate_sources(self, sources, extension): ...
    def filter_py_files(self, sources): ...
    def filter_h_files(self, sources): ...
    def filter_files(self, sources, exts=[]): ...
    def template_sources(self, sources, extension): ...
    def pyrex_sources(self, sources, extension): ...
    def generate_a_pyrex_source(self, base, ext_name, source, extension): ...
    def f2py_sources(self, sources, extension): ...
    def swig_sources(self, sources, extension): ...

def get_swig_target(source): ...
def get_swig_modulename(source): ...
def get_f2py_modulename(source): ...
