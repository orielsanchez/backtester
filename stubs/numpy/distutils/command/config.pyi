from _typeshed import Incomplete
from distutils.command.config import config as old_config
from numpy.distutils.command.autodist import check_compiler_gcc as check_compiler_gcc, check_gcc_function_attribute as check_gcc_function_attribute, check_gcc_function_attribute_with_intrinsics as check_gcc_function_attribute_with_intrinsics, check_gcc_variable_attribute as check_gcc_variable_attribute, check_gcc_version_at_least as check_gcc_version_at_least, check_inline as check_inline, check_restrict as check_restrict
from numpy.distutils.exec_command import filepath_from_subprocess_output as filepath_from_subprocess_output
from numpy.distutils.mingw32ccompiler import generate_manifest as generate_manifest

class config(old_config):
    fcompiler: Incomplete
    def initialize_options(self) -> None: ...
    def check_header(self, header, include_dirs: Incomplete | None = None, library_dirs: Incomplete | None = None, lang: str = 'c'): ...
    def check_decl(self, symbol, headers: Incomplete | None = None, include_dirs: Incomplete | None = None): ...
    def check_macro_true(self, symbol, headers: Incomplete | None = None, include_dirs: Incomplete | None = None): ...
    def check_type(self, type_name, headers: Incomplete | None = None, include_dirs: Incomplete | None = None, library_dirs: Incomplete | None = None): ...
    def check_type_size(self, type_name, headers: Incomplete | None = None, include_dirs: Incomplete | None = None, library_dirs: Incomplete | None = None, expected: Incomplete | None = None): ...
    def check_func(self, func, headers: Incomplete | None = None, include_dirs: Incomplete | None = None, libraries: Incomplete | None = None, library_dirs: Incomplete | None = None, decl: bool = False, call: bool = False, call_args: Incomplete | None = None): ...
    def check_funcs_once(self, funcs, headers: Incomplete | None = None, include_dirs: Incomplete | None = None, libraries: Incomplete | None = None, library_dirs: Incomplete | None = None, decl: bool = False, call: bool = False, call_args: Incomplete | None = None): ...
    def check_inline(self): ...
    def check_restrict(self): ...
    def check_compiler_gcc(self): ...
    def check_gcc_function_attribute(self, attribute, name): ...
    def check_gcc_function_attribute_with_intrinsics(self, attribute, name, code, include): ...
    def check_gcc_variable_attribute(self, attribute): ...
    def check_gcc_version_at_least(self, major, minor: int = 0, patchlevel: int = 0): ...
    def get_output(self, body, headers: Incomplete | None = None, include_dirs: Incomplete | None = None, libraries: Incomplete | None = None, library_dirs: Incomplete | None = None, lang: str = 'c', use_tee: Incomplete | None = None): ...

class GrabStdout:
    sys_stdout: Incomplete
    data: str
    def __init__(self) -> None: ...
    def write(self, data) -> None: ...
    def flush(self) -> None: ...
    def restore(self) -> None: ...
