from ..exceptions import DTypePromotionError as DTypePromotionError
from .multiarray import StringDType as StringDType, array as array, dtype as dtype, ndarray as ndarray, promote_types as promote_types
from _typeshed import Incomplete

IS_PYPY: Incomplete
format_re: Incomplete
sep_re: Incomplete
space_re: Incomplete

class dummy_ctype:
    def __init__(self, cls) -> None: ...
    def __mul__(self, other): ...
    def __call__(self, *other): ...
    def __eq__(self, other): ...
    def __ne__(self, other): ...

class _missing_ctypes:
    def cast(self, num, obj): ...
    class c_void_p:
        value: Incomplete
        def __init__(self, ptr) -> None: ...

class _ctypes:
    def __init__(self, array, ptr: Incomplete | None = None) -> None: ...
    def data_as(self, obj): ...
    def shape_as(self, obj): ...
    def strides_as(self, obj): ...
    @property
    def data(self): ...
    @property
    def shape(self): ...
    @property
    def strides(self): ...
    def get_data(self): ...
    def get_shape(self): ...
    def get_strides(self): ...
    def get_as_parameter(self): ...

class _Stream:
    s: Incomplete
    byteorder: str
    def __init__(self, s) -> None: ...
    def advance(self, n): ...
    def consume(self, c): ...
    def consume_until(self, c): ...
    @property
    def next(self): ...
    def __bool__(self) -> bool: ...

def array_ufunc_errmsg_formatter(dummy, ufunc, method, *inputs, **kwargs): ...
def array_function_errmsg_formatter(public_api, types): ...
def npy_ctypes_check(cls): ...
