from . import numerictypes as nt
from _typeshed import Incomplete

__all__ = ['record', 'recarray', 'format_parser', 'fromarrays', 'fromrecords', 'fromstring', 'fromfile', 'array', 'find_duplicate']

def find_duplicate(list): ...

class format_parser:
    def __init__(self, formats, names, titles, aligned: bool = False, byteorder: Incomplete | None = None) -> None: ...

class record(nt.void):
    __module__: str
    def __getattribute__(self, attr): ...
    def __setattr__(self, attr, val): ...
    def __getitem__(self, indx): ...
    def pprint(self): ...

class recarray(ndarray):
    def __new__(subtype, shape, dtype: Incomplete | None = None, buf: Incomplete | None = None, offset: int = 0, strides: Incomplete | None = None, formats: Incomplete | None = None, names: Incomplete | None = None, titles: Incomplete | None = None, byteorder: Incomplete | None = None, aligned: bool = False, order: str = 'C'): ...
    dtype: Incomplete
    def __array_finalize__(self, obj) -> None: ...
    def __getattribute__(self, attr): ...
    def __setattr__(self, attr, val): ...
    def __getitem__(self, indx): ...
    def field(self, attr, val: Incomplete | None = None): ...

def fromarrays(arrayList, dtype: Incomplete | None = None, shape: Incomplete | None = None, formats: Incomplete | None = None, names: Incomplete | None = None, titles: Incomplete | None = None, aligned: bool = False, byteorder: Incomplete | None = None): ...
def fromrecords(recList, dtype: Incomplete | None = None, shape: Incomplete | None = None, formats: Incomplete | None = None, names: Incomplete | None = None, titles: Incomplete | None = None, aligned: bool = False, byteorder: Incomplete | None = None): ...
def fromstring(datastring, dtype: Incomplete | None = None, shape: Incomplete | None = None, offset: int = 0, formats: Incomplete | None = None, names: Incomplete | None = None, titles: Incomplete | None = None, aligned: bool = False, byteorder: Incomplete | None = None): ...
def fromfile(fd, dtype: Incomplete | None = None, shape: Incomplete | None = None, offset: int = 0, formats: Incomplete | None = None, names: Incomplete | None = None, titles: Incomplete | None = None, aligned: bool = False, byteorder: Incomplete | None = None): ...
def array(obj, dtype: Incomplete | None = None, shape: Incomplete | None = None, offset: int = 0, strides: Incomplete | None = None, formats: Incomplete | None = None, names: Incomplete | None = None, titles: Incomplete | None = None, aligned: bool = False, byteorder: Incomplete | None = None, copy: bool = True): ...
