from _typeshed import Incomplete

__all__ = ['diag', 'diagflat', 'eye', 'fliplr', 'flipud', 'tri', 'triu', 'tril', 'vander', 'histogram2d', 'mask_indices', 'tril_indices', 'tril_indices_from', 'triu_indices', 'triu_indices_from']

def fliplr(m): ...
def flipud(m): ...
def eye(N, M: Incomplete | None = None, k: int = 0, dtype=..., order: str = 'C', *, device: Incomplete | None = None, like: Incomplete | None = None): ...
def diag(v, k: int = 0): ...
def diagflat(v, k: int = 0): ...
def tri(N, M: Incomplete | None = None, k: int = 0, dtype=..., *, like: Incomplete | None = None): ...
def tril(m, k: int = 0): ...
def triu(m, k: int = 0): ...
def vander(x, N: Incomplete | None = None, increasing: bool = False): ...
def histogram2d(x, y, bins: int = 10, range: Incomplete | None = None, density: Incomplete | None = None, weights: Incomplete | None = None): ...
def mask_indices(n, mask_func, k: int = 0): ...
def tril_indices(n, k: int = 0, m: Incomplete | None = None): ...
def tril_indices_from(arr, k: int = 0): ...
def triu_indices(n, k: int = 0, m: Incomplete | None = None): ...
def triu_indices_from(arr, k: int = 0): ...
