import pandas as pd
from _typeshed import Incomplete
from yfinance import shared as shared, utils as utils
from yfinance.exceptions import YFInvalidPeriodError as YFInvalidPeriodError, YFPricesMissingError as YFPricesMissingError, YFRateLimitError as YFRateLimitError, YFTzMissingError as YFTzMissingError

class PriceHistory:
    ticker: Incomplete
    tz: Incomplete
    proxy: Incomplete
    session: Incomplete
    def __init__(self, data, ticker, tz, session: Incomplete | None = None, proxy: Incomplete | None = None) -> None: ...
    def history(self, period: str = '1mo', interval: str = '1d', start: Incomplete | None = None, end: Incomplete | None = None, prepost: bool = False, actions: bool = True, auto_adjust: bool = True, back_adjust: bool = False, repair: bool = False, keepna: bool = False, proxy: Incomplete | None = None, rounding: bool = False, timeout: int = 10, raise_errors: bool = False) -> pd.DataFrame: ...
    def get_history_metadata(self, proxy: Incomplete | None = None) -> dict: ...
    def get_dividends(self, period: str = 'max', proxy: Incomplete | None = None) -> pd.Series: ...
    def get_capital_gains(self, period: str = 'max', proxy: Incomplete | None = None) -> pd.Series: ...
    def get_splits(self, period: str = 'max', proxy: Incomplete | None = None) -> pd.Series: ...
    def get_actions(self, period: str = 'max', proxy: Incomplete | None = None) -> pd.Series: ...
