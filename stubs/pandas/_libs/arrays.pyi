from _typeshed import Incomplete
from typing import ClassVar

__test__: dict

class NDArrayBacked:
    _concat_same_type: ClassVar[method] = ...
    _simple_new: ClassVar[method] = ...
    __pyx_vtable__: ClassVar[PyCapsule] = ...
    T: Incomplete
    nbytes: Incomplete
    ndim: Incomplete
    shape: Incomplete
    size: Incomplete
    def __init__(self, *args, **kwargs) -> None: ...
    def copy(self, *args, **kwargs): ...
    def delete(self, *args, **kwargs): ...
    def ravel(self, *args, **kwargs): ...
    def repeat(self, *args, **kwargs): ...
    def reshape(self, *args, **kwargs): ...
    def swapaxes(self, *args, **kwargs): ...
    def transpose(self, *args, **kwargs): ...
    def __len__(self) -> int: ...
    def __reduce__(self): ...
    def __reduce_cython__(self, *args, **kwargs): ...
    def __setstate_cython__(self, *args, **kwargs): ...
