import numpy as np
from _typeshed import Incomplete
from collections.abc import Hashable, Sequence
from matplotlib.axes import Axes as Axes
from pandas import DataFrame as DataFrame, Series as Series
from pandas._config import get_option as get_option
from pandas._typing import IndexLabel as IndexLabel
from pandas.core.base import PandasObject as PandasObject
from pandas.core.dtypes.common import is_integer as is_integer, is_list_like as is_list_like
from pandas.core.dtypes.generic import ABCDataFrame as ABCDataFrame, ABCSeries as ABCSeries
from pandas.core.groupby.generic import DataFrameGroupBy as DataFrameGroupBy
from pandas.util._decorators import Appender as Appender, Substitution as Substitution
from typing import Callable, Literal

def hist_series(self, by: Incomplete | None = None, ax: Incomplete | None = None, grid: bool = True, xlabelsize: int | None = None, xrot: float | None = None, ylabelsize: int | None = None, yrot: float | None = None, figsize: tuple[int, int] | None = None, bins: int | Sequence[int] = 10, backend: str | None = None, legend: bool = False, **kwargs): ...
def hist_frame(data: DataFrame, column: IndexLabel | None = None, by: Incomplete | None = None, grid: bool = True, xlabelsize: int | None = None, xrot: float | None = None, ylabelsize: int | None = None, yrot: float | None = None, ax: Incomplete | None = None, sharex: bool = False, sharey: bool = False, figsize: tuple[int, int] | None = None, layout: tuple[int, int] | None = None, bins: int | Sequence[int] = 10, backend: str | None = None, legend: bool = False, **kwargs): ...
def boxplot(data: DataFrame, column: str | list[str] | None = None, by: str | list[str] | None = None, ax: Axes | None = None, fontsize: float | str | None = None, rot: int = 0, grid: bool = True, figsize: tuple[float, float] | None = None, layout: tuple[int, int] | None = None, return_type: str | None = None, **kwargs): ...
def boxplot_frame(self, column: Incomplete | None = None, by: Incomplete | None = None, ax: Incomplete | None = None, fontsize: int | None = None, rot: int = 0, grid: bool = True, figsize: tuple[float, float] | None = None, layout: Incomplete | None = None, return_type: Incomplete | None = None, backend: Incomplete | None = None, **kwargs): ...
def boxplot_frame_groupby(grouped: DataFrameGroupBy, subplots: bool = True, column: Incomplete | None = None, fontsize: int | None = None, rot: int = 0, grid: bool = True, ax: Incomplete | None = None, figsize: tuple[float, float] | None = None, layout: Incomplete | None = None, sharex: bool = False, sharey: bool = True, backend: Incomplete | None = None, **kwargs): ...

class PlotAccessor(PandasObject):
    def __init__(self, data: Series | DataFrame) -> None: ...
    def __call__(self, *args, **kwargs): ...
    def line(self, x: Hashable | None = None, y: Hashable | None = None, **kwargs) -> PlotAccessor: ...
    def bar(self, x: Hashable | None = None, y: Hashable | None = None, **kwargs) -> PlotAccessor: ...
    def barh(self, x: Hashable | None = None, y: Hashable | None = None, **kwargs) -> PlotAccessor: ...
    def box(self, by: IndexLabel | None = None, **kwargs) -> PlotAccessor: ...
    def hist(self, by: IndexLabel | None = None, bins: int = 10, **kwargs) -> PlotAccessor: ...
    def kde(self, bw_method: Literal['scott', 'silverman'] | float | Callable | None = None, ind: np.ndarray | int | None = None, **kwargs) -> PlotAccessor: ...
    density = kde
    def area(self, x: Hashable | None = None, y: Hashable | None = None, stacked: bool = True, **kwargs) -> PlotAccessor: ...
    def pie(self, **kwargs) -> PlotAccessor: ...
    def scatter(self, x: Hashable, y: Hashable, s: Hashable | Sequence[Hashable] | None = None, c: Hashable | Sequence[Hashable] | None = None, **kwargs) -> PlotAccessor: ...
    def hexbin(self, x: Hashable, y: Hashable, C: Hashable | None = None, reduce_C_function: Callable | None = None, gridsize: int | tuple[int, int] | None = None, **kwargs) -> PlotAccessor: ...
