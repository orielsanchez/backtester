import pyarrow
from pandas._typing import IntervalClosedType as IntervalClosedType
from pandas.compat import pa_version_under14p1 as pa_version_under14p1
from pandas.core.arrays.interval import VALID_CLOSED as VALID_CLOSED
from pandas.core.dtypes.dtypes import IntervalDtype as IntervalDtype, PeriodDtype as PeriodDtype

class ArrowPeriodType(pyarrow.ExtensionType):
    def __init__(self, freq) -> None: ...
    @property
    def freq(self): ...
    def __arrow_ext_serialize__(self) -> bytes: ...
    @classmethod
    def __arrow_ext_deserialize__(cls, storage_type, serialized) -> ArrowPeriodType: ...
    def __eq__(self, other): ...
    def __ne__(self, other) -> bool: ...
    def __hash__(self) -> int: ...
    def to_pandas_dtype(self) -> PeriodDtype: ...

class ArrowIntervalType(pyarrow.ExtensionType):
    def __init__(self, subtype, closed: IntervalClosedType) -> None: ...
    @property
    def subtype(self): ...
    @property
    def closed(self) -> IntervalClosedType: ...
    def __arrow_ext_serialize__(self) -> bytes: ...
    @classmethod
    def __arrow_ext_deserialize__(cls, storage_type, serialized) -> ArrowIntervalType: ...
    def __eq__(self, other): ...
    def __ne__(self, other) -> bool: ...
    def __hash__(self) -> int: ...
    def to_pandas_dtype(self) -> IntervalDtype: ...

def patch_pyarrow(): ...
