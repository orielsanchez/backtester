import numpy as np
import pandas as pd
from pandas.compat._optional import import_optional_dependency as import_optional_dependency
from pandas.core.interchange.dataframe_protocol import Buffer as Buffer, Column as Column, ColumnNullType as ColumnNullType, DataFrame as DataFrameXchg, DtypeKind as DtypeKind
from pandas.core.interchange.utils import ArrowCTypes as ArrowCTypes, Endianness as Endianness
from pandas.errors import SettingWithCopyError as SettingWithCopyError
from typing import Any

def from_dataframe(df, allow_copy: bool = True) -> pd.DataFrame: ...
def protocol_df_chunk_to_pandas(df: DataFrameXchg) -> pd.DataFrame: ...
def primitive_column_to_ndarray(col: Column) -> tuple[np.ndarray, Any]: ...
def categorical_column_to_series(col: Column) -> tuple[pd.Series, Any]: ...
def string_column_to_ndarray(col: Column) -> tuple[np.ndarray, Any]: ...
def parse_datetime_format_str(format_str, data) -> pd.Series | np.ndarray: ...
def datetime_column_to_ndarray(col: Column) -> tuple[np.ndarray | pd.Series, Any]: ...
def buffer_to_ndarray(buffer: Buffer, dtype: tuple[DtypeKind, int, str, str], *, length: int, offset: int = 0) -> np.ndarray: ...
def set_nulls(data: np.ndarray | pd.Series, col: Column, validity: tuple[Buffer, tuple[DtypeKind, int, str, str]] | None, allow_modify_inplace: bool = True): ...
